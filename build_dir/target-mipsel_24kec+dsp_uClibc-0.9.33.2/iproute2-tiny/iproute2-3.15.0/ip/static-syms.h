extern char bond_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "bond_slave_link_util")) return bond_slave_link_util;
extern char ip6gre_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6gre_link_util")) return ip6gre_link_util;
extern char ip6gretap_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6gretap_link_util")) return ip6gretap_link_util;
extern char bond_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "bond_slave_link_util")) return bond_slave_link_util;
extern char ip6tnl_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6tnl_link_util")) return ip6tnl_link_util;
extern char vlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "vlan_link_util")) return vlan_link_util;
extern char hsr_link_util[] __attribute__((weak)); if (!strcmp(sym, "hsr_link_util")) return hsr_link_util;
extern char veth_link_util[] __attribute__((weak)); if (!strcmp(sym, "veth_link_util")) return veth_link_util;
extern char ipip_link_util[] __attribute__((weak)); if (!strcmp(sym, "ipip_link_util")) return ipip_link_util;
extern char sit_link_util[] __attribute__((weak)); if (!strcmp(sym, "sit_link_util")) return sit_link_util;
extern char macvlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "macvlan_link_util")) return macvlan_link_util;
extern char gre_link_util[] __attribute__((weak)); if (!strcmp(sym, "gre_link_util")) return gre_link_util;
extern char gretap_link_util[] __attribute__((weak)); if (!strcmp(sym, "gretap_link_util")) return gretap_link_util;
extern char bond_link_util[] __attribute__((weak)); if (!strcmp(sym, "bond_link_util")) return bond_link_util;
extern char vti_link_util[] __attribute__((weak)); if (!strcmp(sym, "vti_link_util")) return vti_link_util;
extern char macvtap_link_util[] __attribute__((weak)); if (!strcmp(sym, "macvtap_link_util")) return macvtap_link_util;
